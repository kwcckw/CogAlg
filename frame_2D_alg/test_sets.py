from itertools import repeat

import numpy as np

from numpy import nan, inf

# -----------------------------------------------------------------------
# in/out for comp_pixel tests

pixels = [
    # pure vertical edge
    np.array([[0, 50, 100, 150, 200],
              [0, 50, 100, 150, 200],
              [0, 50, 100, 150, 200],
              [0, 50, 100, 150, 200],
              [0, 50, 100, 150, 200]]),

    # pure horizontal edge
    np.array([[200, 200, 200, 200, 200],
              [150, 150, 150, 150, 150],
              [100, 100, 100, 100, 100],
              [ 50,  50,  50,  50,  50],
              [  0,   0,   0,   0,   0]]),

    # smiley image
    np.array([[255, 255,   0,   0,   0,   0,   0,   0, 255, 255],
              [255,   0, 255, 255, 255, 255, 255, 255,   0, 255],
              [  0, 255, 255, 255, 255, 255, 255, 255, 255,   0],
              [  0, 255,   0,   0, 255, 255,   0,   0, 255,   0],
              [  0, 255,   0,   0, 255, 255,   0,   0, 255,   0],
              [  0, 255, 255, 255, 255, 255, 255, 255, 255,   0],
              [  0, 255,   0, 255, 255, 255, 255,   0, 255,   0],
              [  0, 255, 255,   0,   0,   0,   0, 255, 255,   0],
              [255,   0, 255, 255, 255, 255, 255, 255,   0, 255],
              [255, 255,   0,   0,   0,   0,   0,   0, 255, 255]]),
]

gderts = [
    # pure vertical edge
    np.array([
        # p
        [[25, 75, 125, 175],
         [25, 75, 125, 175],
         [25, 75, 125, 175],
         [25, 75, 125, 175]],
        # g
        [[50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50]],
        # dy
        [[0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0]],
        # dx
        [[50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50]],
    ]),

    # pure horizontal edge
    np.array([
        # p
        [[175, 175, 175, 175],
         [125, 125, 125, 125],
         [ 75,  75,  75,  75],
         [ 25,  25,  25,  25]],
        # g
        [[50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50],
         [50, 50, 50, 50]],
        # dy
        [[-50, -50, -50, -50],
         [-50, -50, -50, -50],
         [-50, -50, -50, -50],
         [-50, -50, -50, -50]],
        # dx
        [[0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0]],
    ]),

    # smiley image
    np.array([
        # p
        [[191.25, 127.5 , 127.5 , 127.5 , 127.5, 127.5 , 127.5 , 127.5 , 191.25],
         [127.5 , 191.25, 255   , 255   , 255  , 255   , 255   , 191.25, 127.5 ],
         [127.5 , 191.25, 127.5 , 191.25, 255  , 191.25, 127.5 , 191.25, 127.5 ],
         [127.5 , 127.5 ,   0   , 127.5 , 255  , 127.5 ,   0   , 127.5 , 127.5 ],
         [127.5 , 191.25, 127.5 , 191.25, 255  , 191.25, 127.5 , 191.25, 127.5 ],
         [127.5 , 191.25, 191.25, 255   , 255  , 255   , 191.25, 191.25, 127.5 ],
         [127.5 , 191.25, 127.5 , 127.5 , 127.5, 127.5 , 127.5 , 191.25, 127.5 ],
         [127.5 , 191.25, 191.25, 127.5 , 127.5, 127.5 , 191.25, 191.25, 127.5 ],
         [191.25, 127.5 , 127.5 , 127.5 , 127.5, 127.5 , 127.5 , 127.5 , 191.25]],
        # g
        [[180.3122,   0     , 255     , 255     , 255, 255     , 255     ,   0     , 180.3122],
         [  0     , 180.3122,   0     ,   0     ,   0,   0     ,   0     , 180.3122,   0     ],
         [255     , 180.3122, 255     , 180.3122,   0, 180.3122, 255     , 180.3122, 255     ],
         [255     , 255     ,   0     , 255     ,   0, 255     ,   0     , 255     , 255     ],
         [255     , 180.3122, 255     , 180.3122,   0, 180.3122, 255     , 180.3122, 255     ],
         [255     , 180.3122, 180.3122,   0     ,   0,   0     , 180.3122, 180.3122, 255     ],
         [255     , 180.3122,   0     , 255     , 255, 255     ,   0     , 180.3122, 255     ],
         [  0     , 180.3122, 180.3122, 255     , 255, 255     , 180.3122, 180.3122,   0     ],
         [180.3122,   0     , 255     , 255     , 255, 255     , 255     ,   0     , 180.3122]],
        # dy
        [[-127.5,    0  ,  255  ,  255  ,  255  ,  255  ,  255  ,    0  , -127.5],
         [   0  ,  127.5,    0  ,    0  ,    0  ,    0  ,    0  ,  127.5,    0  ],
         [   0  , -127.5, -255  , -127.5,    0  , -127.5, -255  , -127.5,    0  ],
         [   0  ,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ],
         [   0  ,  127.5,  255  ,  127.5,    0  ,  127.5,  255  ,  127.5,    0  ],
         [   0  , -127.5, -127.5,    0  ,    0  ,    0  , -127.5, -127.5,    0  ],
         [   0  ,  127.5,    0  , -255  , -255  , -255  ,    0  ,  127.5,    0  ],
         [   0  , -127.5,  127.5,  255  ,  255  ,  255  ,  127.5, -127.5,    0  ],
         [ 127.5,    0  , -255  , -255  , -255  , -255  , -255  ,    0  ,  127.5]],
        # dx
        [[-127.5,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,  127.5],
         [   0  ,  127.5,    0  ,    0  ,    0  ,    0  ,    0  , -127.5,    0  ],
         [ 255  , -127.5,    0  ,  127.5,    0  , -127.5,    0  ,  127.5, -255  ],
         [ 255  , -255  ,    0  ,  255  ,    0  , -255  ,    0  ,  255  , -255  ],
         [ 255  , -127.5,    0  ,  127.5,    0  , -127.5,    0  ,  127.5, -255  ],
         [ 255  , -127.5,  127.5,    0  ,    0  ,    0  , -127.5,  127.5, -255  ],
         [ 255  , -127.5,    0  ,    0  ,    0  ,    0  ,    0  ,  127.5, -255  ],
         [   0  ,  127.5, -127.5,    0  ,    0  ,    0  ,  127.5, -127.5,    0  ],
         [-127.5,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,    0  ,  127.5]],
    ]),
]
for p, d in zip(pixels, gderts):
    d[0] = p[:-1, :-1] # replace p__ in gderts
# gderts = [gd[:, :-1, :-1] for gd in gderts] # adjust gdert shape

rderts = [
    # pure vertical edge
    np.array([
        # p
        [[50, 100, 150],
         [50, 100, 150],
         [50, 100, 150]],
        # g
        [[50, 50, 50],
         [50, 50, 50],
         [50, 50, 50]],
        # dy
        [[0, 0, 0],
         [0, 0, 0],
         [0, 0, 0]],
        # dx
        [[50, 50, 50],
         [50, 50, 50],
         [50, 50, 50]],
    ]),

    # pure horizontal edge
    np.array([
        # p
        [[150, 150, 150],
         [100, 100, 100],
         [50, 50, 50]],
        # g
        [[50, 50, 50],
         [50, 50, 50],
         [50, 50, 50]],
        # dy
        [[-50, -50, -50],
         [-50, -50, -50],
         [-50, -50, -50]],
        # dx
        [[0, 0, 0],
         [0, 0, 0],
         [0, 0, 0]],
    ]),

    # smiley image
    np.array([
        [[  0, 255, 255, 255, 255, 255, 255,   0],
         [255, 255, 255, 255, 255, 255, 255, 255],
         [255,   0,   0, 255, 255,   0,   0, 255],
         [255,   0,   0, 255, 255,   0,   0, 255],
         [255, 255, 255, 255, 255, 255, 255, 255],
         [255,   0, 255, 255, 255, 255,   0, 255],
         [255, 255,   0,   0,   0,   0, 255, 255],
         [  0, 255, 255, 255, 255, 255, 255,   0]],
        # g
        [[  0.    , 255.    , 382.5   , 382.5   , 382.5   , 382.5   , 255.    ,   0.    ],
         [180.3122, 127.5   , 285.0987, 180.3122, 180.3122, 285.0987, 127.5   , 180.3122],
         [180.3122, 360.6245, 360.6245, 285.0987, 285.0987, 360.6245, 360.6245, 180.3122],
         [180.3122, 360.6245, 360.6245, 285.0987, 285.0987, 360.6245, 360.6245, 180.3122],
         [127.5   , 180.3122, 285.0987, 180.3122, 180.3122, 285.0987, 180.3122, 127.5   ],
         [255.    , 180.3122, 255.    , 382.5   , 382.5   , 255.    , 180.3122, 255.    ],
         [180.3122,   0.    , 127.5   ,   0.    ,   0.    , 127.5   ,   0.    , 180.3122],
         [  0.    , 180.3122, 180.3122,   0.    ,   0.    , 180.3122, 180.3122,   0.    ]],
        # dy
        [[   0. ,  255. ,  382.5,  382.5,  382.5,  382.5,  255. ,    0. ],
         [-127.5, -127.5, -255. , -127.5, -127.5, -255. , -127.5, -127.5],
         [-127.5, -255. , -255. , -127.5, -127.5, -255. , -255. , -127.5],
         [ 127.5,  255. ,  255. ,  127.5,  127.5,  255. ,  255. ,  127.5],
         [   0. ,  127.5,  127.5,  127.5,  127.5,  127.5,  127.5,    0. ],
         [   0. , -127.5, -255. , -382.5, -382.5, -255. , -127.5,    0. ],
         [ 127.5,    0. ,  127.5,    0. ,    0. ,  127.5,    0. ,  127.5],
         [   0. , -127.5, -127.5,    0. ,    0. , -127.5, -127.5,    0. ]],
        # dx
        [[   0. ,    0. ,    0. ,    0. ,    0. ,    0. ,    0. ,    0. ],
         [ 127.5,    0. ,  127.5,  127.5, -127.5, -127.5,    0. , -127.5],
         [ 127.5, -255. ,  255. ,  255. , -255. , -255. ,  255. , -127.5],
         [ 127.5, -255. ,  255. ,  255. , -255. , -255. ,  255. , -127.5],
         [ 127.5, -127.5,  255. ,  127.5, -127.5, -255. ,  127.5, -127.5],
         [ 255. , -127.5,    0. ,    0. ,    0. ,    0. ,  127.5, -255. ],
         [ 127.5,    0. ,    0. ,    0. ,    0. ,    0. ,    0. , -127.5],
         [   0. , -127.5, -127.5,    0. ,    0. ,  127.5,  127.5,    0. ]],
    ]),
]

# -----------------------------------------------------------------------
# in/out for intra_comp tests

angles = [
    # pure vertical edge
    np.array([
        # sines
        [[0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0]],
        # cosines
        [[1, 1, 1, 1],
         [1, 1, 1, 1],
         [1, 1, 1, 1],
         [1, 1, 1, 1]],
    ]),

    # pure horizontal edge
    np.array([
        # sines
        [[-1, -1, -1, -1],
         [-1, -1, -1, -1],
         [-1, -1, -1, -1],
         [-1, -1, -1, -1]],
        # cosines
        [[0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0],
         [0, 0, 0, 0]],
    ]),

    # smiley image
    # There are NaN values due to division by zero,
    # which is caused by instances where g = 0.
    # Computed angles in real run won't have these,
    # because derts with low g are filtered.
    np.array([
        [[-0.7071,   nan  ,  1     ,  1     , 1. ,  1     ,  1     ,   nan  , -0.7071],
         [  nan  , 0.7071 ,   nan  ,   nan  , nan,   nan  ,   nan  , 0.7071 ,   nan  ],
         [ 0     , -0.7071, -1     , -0.7071, nan, -0.7071, -1     , -0.7071,  0     ],
         [ 0     ,  0     ,   nan  ,  0     , nan,  0     ,   nan  ,  0     ,  0     ],
         [ 0     , 0.7071 ,  1     , 0.7071 , nan, 0.7071 ,  1     , 0.7071 ,  0     ],
         [ 0     , -0.7071, -0.7071,   nan  , nan,   nan  , -0.7071, -0.7071,  0     ],
         [ 0     , 0.7071 ,   nan  , -1     , -1., -1     ,   nan  , 0.7071 ,  0     ],
         [  nan  , -0.7071, 0.7071 ,  1     , 1. ,  1     , 0.7071 , -0.7071,   nan  ],
         [0.7071 ,   nan  , -1     , -1     , -1., -1     , -1     ,   nan  , 0.7071 ]],

        [[-0.7071,   nan  ,  0     , 0     , 0  ,  0     ,  0     ,   nan  ,  0.7071],
         [  nan  ,  0.7071,   nan  , nan   , nan,   nan  ,   nan  , -0.7071,   nan  ],
         [ 1     , -0.7071,  0     , 0.7071, nan, -0.7071,  0     ,  0.7071, -1     ],
         [ 1     , -1     ,   nan  , 1.    , nan, -1     ,   nan  ,  1     , -1     ],
         [ 1     , -0.7071,  0     , 0.7071, nan, -0.7071,  0     ,  0.7071, -1     ],
         [ 1     , -0.7071,  0.7071, nan   , nan,   nan  , -0.7071,  0.7071, -1     ],
         [ 1     , -0.7071,   nan  , 0     , 0  ,  0     ,   nan  ,  0.7071, -1     ],
         [  nan  ,  0.7071, -0.7071, 0     , 0  ,  0     ,  0.7071, -0.7071,   nan  ],
         [-0.7071,   nan  ,  0     , 0     , 0  ,  0     ,  0     ,   nan  ,  0.7071]],
    ]),
]

# -----------------------------------------------------------------------
# in/out for ternary sign tests (obsolete)

aves_2x2 = [20, 55, 200]
aves_3x3 = [8, 22, 100]

vgs = [
    np.array([[30, 30, 30, 30],
              [30, 30, 30, 30],
              [30, 30, 30, 30],
              [30, 30, 30, 30]]),
    np.array([[-5, -5, -5, -5],
              [-5, -5, -5, -5],
              [-5, -5, -5, -5],
              [-5, -5, -5, -5]]),
    np.array([[- 19.6878, -200     ,   55     ,   55     ,   55,   55     ,   55     , -200     , - 19.6878],
              [-200     , - 19.6878, -200     , -200     , -200, -200     , -200     , - 19.6878, -200     ],
              [  55     , - 19.6878,   55     , - 19.6878, -200, - 19.6878,   55     , - 19.6878,   55     ],
              [  55     ,   55     , -200     ,   55     , -200,   55     , -200     ,   55     ,   55     ],
              [  55     , - 19.6878,   55     , - 19.6878, -200, - 19.6878,   55     , - 19.6878,   55     ],
              [  55     , - 19.6878, - 19.6878, -200     , -200, -200     , - 19.6878, - 19.6878,   55     ],
              [  55     , - 19.6878, -200     ,   55     ,   55,   55     , -200     , - 19.6878,   55     ],
              [-200     , - 19.6878, - 19.6878,   55     ,   55,   55     , - 19.6878, - 19.6878, -200     ],
              [- 19.6878, -200     ,   55     ,   55     ,   55,   55     ,   55     , -200     , - 19.6878]]),
]
vg3s = [
    np.array([[42, 42, 42],
              [42, 42, 42],
              [42, 42, 42]]),
    np.array([[28, 28, 28],
              [28, 28, 28],
              [28, 28, 28]]),
    np.array([[ -100   ,     0.7976,   27.5   ,   27.5   ,   27.5   ,   27.5   ,    0.7976, -100    ],
              [ -36.25 ,   -36.25  ,    0.7976,  -54.922 ,  -54.922 ,    0.7976,  -36.25  ,  -36.25 ],
              [ -54.922,    35.2342,   35.2342,    0.7976,    0.7976,   35.2342,   35.2342,  -54.922],
              [ -54.922,    35.2342,   35.2342,    0.7976,    0.7976,   35.2342,   35.2342,  -54.922],
              [ -36.25 ,   -54.922 ,   -9.8439,  -54.922 ,  -54.922 ,   -9.8439,  -54.922 ,  -36.25 ],
              [ -36.25 ,   -54.922 ,    0.7976,   27.5   ,   27.5   ,    0.7976,  -54.922 ,  -36.25 ],
              [ -36.25 ,   -54.922 ,  -54.922 , -100     , -100     ,  -54.922 ,  -54.922 ,  -36.25 ],
              [ -100   ,   -36.25  ,  -54.922 , -100     , -100     ,  -54.922 ,  -36.25  , -100    ]]),

]
s3__ = [
    np.array([[0, 0, 0],
              [0, 0, 0],
              [0, 0, 0]]),
    np.array([[1, 1, 1],
              [1, 1, 1],
              [1, 1, 1]]),
    np.array([[2, 0, 0, 0, 0, 0, 0, 2],
              [0, 0, 0, 2, 2, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 2, 2, 0, 0, 0],
              [0, 2, 0, 0, 0, 0, 2, 0],
              [0, 2, 0, 0, 0, 0, 2, 0],
              [2, 0, 0, 0, 0, 0, 0, 2]]),
]

# -----------------------------------------------------------------------
# Test pairs lists

comp_pixel_test_pairs = [*zip(
    pixels, # inputs
    gderts, # expected outputs
)]

calc_a_test_pairs = [*zip(
    gderts, # inputs
    angles, # expected outputs
)]

calc_sign_test_pairs = [*zip(
    # inputs
    zip([gd[1] for gd in gderts],
        [rd[1] for rd in rderts],
        aves_2x2, aves_3x3),
    # outputs
    zip(s3__, vgs, vg3s),
)] + [( # Additional pair
        ( # inputs
            np.array([[21, 19, 20],
                      [19, 18, 16],
                      [19, 17, 20]]),
            np.array([[10, 10],
                      [ 8,  7]]),
            20, # ave_2x2
            8, # ave_3x3
        ),
        ( # outputs
            np.array([[0, 1],
                      [2, 2]]),
            np.array([[ 1, -1,  0],
                      [-1, -2, -4],
                      [-1, -3,  0]]),
            np.array([[2,  2],
                      [0, -1]]),
        ),
    ),
]