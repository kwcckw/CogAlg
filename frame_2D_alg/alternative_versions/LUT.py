import numpy as np


TRANSLATING_SLICES = {
    0:[
        (Ellipsis, slice(None, -2, None), slice(None, -2, None)),
        (Ellipsis, slice(None, -2, None), slice(1, -1, None)),
        (Ellipsis, slice(None, -2, None), slice(2, None, None)),
        (Ellipsis, slice(1, -1, None), slice(2, None, None)),
        (Ellipsis, slice(2, None, None), slice(2, None, None)),
        (Ellipsis, slice(2, None, None), slice(1, -1, None)),
        (Ellipsis, slice(2, None, None), slice(None, -2, None)),
        (Ellipsis, slice(1, -1, None), slice(None, -2, None)),
    ],
    1:[
        (Ellipsis, slice(None, -4, None), slice(None, -4, None)),
        (Ellipsis, slice(None, -4, None), slice(1, -3, None)),
        (Ellipsis, slice(None, -4, None), slice(2, -2, None)),
        (Ellipsis, slice(None, -4, None), slice(3, -1, None)),
        (Ellipsis, slice(None, -4, None), slice(4, None, None)),
        (Ellipsis, slice(1, -3, None), slice(4, None, None)),
        (Ellipsis, slice(2, -2, None), slice(4, None, None)),
        (Ellipsis, slice(3, -1, None), slice(4, None, None)),
        (Ellipsis, slice(4, None, None), slice(4, None, None)),
        (Ellipsis, slice(4, None, None), slice(3, -1, None)),
        (Ellipsis, slice(4, None, None), slice(2, -2, None)),
        (Ellipsis, slice(4, None, None), slice(1, -3, None)),
        (Ellipsis, slice(4, None, None), slice(None, -4, None)),
        (Ellipsis, slice(3, -1, None), slice(None, -4, None)),
        (Ellipsis, slice(2, -2, None), slice(None, -4, None)),
        (Ellipsis, slice(1, -3, None), slice(None, -4, None)),
    ],
    2:[
        (Ellipsis, slice(None, -6, None), slice(None, -6, None)),
        (Ellipsis, slice(None, -6, None), slice(1, -5, None)),
        (Ellipsis, slice(None, -6, None), slice(2, -4, None)),
        (Ellipsis, slice(None, -6, None), slice(3, -3, None)),
        (Ellipsis, slice(None, -6, None), slice(4, -2, None)),
        (Ellipsis, slice(None, -6, None), slice(5, -1, None)),
        (Ellipsis, slice(None, -6, None), slice(6, None, None)),
        (Ellipsis, slice(1, -5, None), slice(6, None, None)),
        (Ellipsis, slice(2, -4, None), slice(6, None, None)),
        (Ellipsis, slice(3, -3, None), slice(6, None, None)),
        (Ellipsis, slice(4, -2, None), slice(6, None, None)),
        (Ellipsis, slice(5, -1, None), slice(6, None, None)),
        (Ellipsis, slice(6, None, None), slice(6, None, None)),
        (Ellipsis, slice(6, None, None), slice(5, -1, None)),
        (Ellipsis, slice(6, None, None), slice(4, -2, None)),
        (Ellipsis, slice(6, None, None), slice(3, -3, None)),
        (Ellipsis, slice(6, None, None), slice(2, -4, None)),
        (Ellipsis, slice(6, None, None), slice(1, -5, None)),
        (Ellipsis, slice(6, None, None), slice(None, -6, None)),
        (Ellipsis, slice(5, -1, None), slice(None, -6, None)),
        (Ellipsis, slice(4, -2, None), slice(None, -6, None)),
        (Ellipsis, slice(3, -3, None), slice(None, -6, None)),
        (Ellipsis, slice(2, -4, None), slice(None, -6, None)),
        (Ellipsis, slice(1, -5, None), slice(None, -6, None)),
    ],
    3:[
        (Ellipsis, slice(None, -8, None), slice(None, -8, None)),
        (Ellipsis, slice(None, -8, None), slice(1, -7, None)),
        (Ellipsis, slice(None, -8, None), slice(2, -6, None)),
        (Ellipsis, slice(None, -8, None), slice(3, -5, None)),
        (Ellipsis, slice(None, -8, None), slice(4, -4, None)),
        (Ellipsis, slice(None, -8, None), slice(5, -3, None)),
        (Ellipsis, slice(None, -8, None), slice(6, -2, None)),
        (Ellipsis, slice(None, -8, None), slice(7, -1, None)),
        (Ellipsis, slice(None, -8, None), slice(8, None, None)),
        (Ellipsis, slice(1, -7, None), slice(8, None, None)),
        (Ellipsis, slice(2, -6, None), slice(8, None, None)),
        (Ellipsis, slice(3, -5, None), slice(8, None, None)),
        (Ellipsis, slice(4, -4, None), slice(8, None, None)),
        (Ellipsis, slice(5, -3, None), slice(8, None, None)),
        (Ellipsis, slice(6, -2, None), slice(8, None, None)),
        (Ellipsis, slice(7, -1, None), slice(8, None, None)),
        (Ellipsis, slice(8, None, None), slice(8, None, None)),
        (Ellipsis, slice(8, None, None), slice(7, -1, None)),
        (Ellipsis, slice(8, None, None), slice(6, -2, None)),
        (Ellipsis, slice(8, None, None), slice(5, -3, None)),
        (Ellipsis, slice(8, None, None), slice(4, -4, None)),
        (Ellipsis, slice(8, None, None), slice(3, -5, None)),
        (Ellipsis, slice(8, None, None), slice(2, -6, None)),
        (Ellipsis, slice(8, None, None), slice(1, -7, None)),
        (Ellipsis, slice(8, None, None), slice(None, -8, None)),
        (Ellipsis, slice(7, -1, None), slice(None, -8, None)),
        (Ellipsis, slice(6, -2, None), slice(None, -8, None)),
        (Ellipsis, slice(5, -3, None), slice(None, -8, None)),
        (Ellipsis, slice(4, -4, None), slice(None, -8, None)),
        (Ellipsis, slice(3, -5, None), slice(None, -8, None)),
        (Ellipsis, slice(2, -6, None), slice(None, -8, None)),
        (Ellipsis, slice(1, -7, None), slice(None, -8, None)),
    ],
    4:[
        (Ellipsis, slice(None, -10, None), slice(None, -10, None)),
        (Ellipsis, slice(None, -10, None), slice(1, -9, None)),
        (Ellipsis, slice(None, -10, None), slice(2, -8, None)),
        (Ellipsis, slice(None, -10, None), slice(3, -7, None)),
        (Ellipsis, slice(None, -10, None), slice(4, -6, None)),
        (Ellipsis, slice(None, -10, None), slice(5, -5, None)),
        (Ellipsis, slice(None, -10, None), slice(6, -4, None)),
        (Ellipsis, slice(None, -10, None), slice(7, -3, None)),
        (Ellipsis, slice(None, -10, None), slice(8, -2, None)),
        (Ellipsis, slice(None, -10, None), slice(9, -1, None)),
        (Ellipsis, slice(None, -10, None), slice(10, None, None)),
        (Ellipsis, slice(1, -9, None), slice(10, None, None)),
        (Ellipsis, slice(2, -8, None), slice(10, None, None)),
        (Ellipsis, slice(3, -7, None), slice(10, None, None)),
        (Ellipsis, slice(4, -6, None), slice(10, None, None)),
        (Ellipsis, slice(5, -5, None), slice(10, None, None)),
        (Ellipsis, slice(6, -4, None), slice(10, None, None)),
        (Ellipsis, slice(7, -3, None), slice(10, None, None)),
        (Ellipsis, slice(8, -2, None), slice(10, None, None)),
        (Ellipsis, slice(9, -1, None), slice(10, None, None)),
        (Ellipsis, slice(10, None, None), slice(10, None, None)),
        (Ellipsis, slice(10, None, None), slice(9, -1, None)),
        (Ellipsis, slice(10, None, None), slice(8, -2, None)),
        (Ellipsis, slice(10, None, None), slice(7, -3, None)),
        (Ellipsis, slice(10, None, None), slice(6, -4, None)),
        (Ellipsis, slice(10, None, None), slice(5, -5, None)),
        (Ellipsis, slice(10, None, None), slice(4, -6, None)),
        (Ellipsis, slice(10, None, None), slice(3, -7, None)),
        (Ellipsis, slice(10, None, None), slice(2, -8, None)),
        (Ellipsis, slice(10, None, None), slice(1, -9, None)),
        (Ellipsis, slice(10, None, None), slice(None, -10, None)),
        (Ellipsis, slice(9, -1, None), slice(None, -10, None)),
        (Ellipsis, slice(8, -2, None), slice(None, -10, None)),
        (Ellipsis, slice(7, -3, None), slice(None, -10, None)),
        (Ellipsis, slice(6, -4, None), slice(None, -10, None)),
        (Ellipsis, slice(5, -5, None), slice(None, -10, None)),
        (Ellipsis, slice(4, -6, None), slice(None, -10, None)),
        (Ellipsis, slice(3, -7, None), slice(None, -10, None)),
        (Ellipsis, slice(2, -8, None), slice(None, -10, None)),
        (Ellipsis, slice(1, -9, None), slice(None, -10, None)),
    ],
    5:[
        (Ellipsis, slice(None, -12, None), slice(None, -12, None)),
        (Ellipsis, slice(None, -12, None), slice(1, -11, None)),
        (Ellipsis, slice(None, -12, None), slice(2, -10, None)),
        (Ellipsis, slice(None, -12, None), slice(3, -9, None)),
        (Ellipsis, slice(None, -12, None), slice(4, -8, None)),
        (Ellipsis, slice(None, -12, None), slice(5, -7, None)),
        (Ellipsis, slice(None, -12, None), slice(6, -6, None)),
        (Ellipsis, slice(None, -12, None), slice(7, -5, None)),
        (Ellipsis, slice(None, -12, None), slice(8, -4, None)),
        (Ellipsis, slice(None, -12, None), slice(9, -3, None)),
        (Ellipsis, slice(None, -12, None), slice(10, -2, None)),
        (Ellipsis, slice(None, -12, None), slice(11, -1, None)),
        (Ellipsis, slice(None, -12, None), slice(12, None, None)),
        (Ellipsis, slice(1, -11, None), slice(12, None, None)),
        (Ellipsis, slice(2, -10, None), slice(12, None, None)),
        (Ellipsis, slice(3, -9, None), slice(12, None, None)),
        (Ellipsis, slice(4, -8, None), slice(12, None, None)),
        (Ellipsis, slice(5, -7, None), slice(12, None, None)),
        (Ellipsis, slice(6, -6, None), slice(12, None, None)),
        (Ellipsis, slice(7, -5, None), slice(12, None, None)),
        (Ellipsis, slice(8, -4, None), slice(12, None, None)),
        (Ellipsis, slice(9, -3, None), slice(12, None, None)),
        (Ellipsis, slice(10, -2, None), slice(12, None, None)),
        (Ellipsis, slice(11, -1, None), slice(12, None, None)),
        (Ellipsis, slice(12, None, None), slice(12, None, None)),
        (Ellipsis, slice(12, None, None), slice(11, -1, None)),
        (Ellipsis, slice(12, None, None), slice(10, -2, None)),
        (Ellipsis, slice(12, None, None), slice(9, -3, None)),
        (Ellipsis, slice(12, None, None), slice(8, -4, None)),
        (Ellipsis, slice(12, None, None), slice(7, -5, None)),
        (Ellipsis, slice(12, None, None), slice(6, -6, None)),
        (Ellipsis, slice(12, None, None), slice(5, -7, None)),
        (Ellipsis, slice(12, None, None), slice(4, -8, None)),
        (Ellipsis, slice(12, None, None), slice(3, -9, None)),
        (Ellipsis, slice(12, None, None), slice(2, -10, None)),
        (Ellipsis, slice(12, None, None), slice(1, -11, None)),
        (Ellipsis, slice(12, None, None), slice(None, -12, None)),
        (Ellipsis, slice(11, -1, None), slice(None, -12, None)),
        (Ellipsis, slice(10, -2, None), slice(None, -12, None)),
        (Ellipsis, slice(9, -3, None), slice(None, -12, None)),
        (Ellipsis, slice(8, -4, None), slice(None, -12, None)),
        (Ellipsis, slice(7, -5, None), slice(None, -12, None)),
        (Ellipsis, slice(6, -6, None), slice(None, -12, None)),
        (Ellipsis, slice(5, -7, None), slice(None, -12, None)),
        (Ellipsis, slice(4, -8, None), slice(None, -12, None)),
        (Ellipsis, slice(3, -9, None), slice(None, -12, None)),
        (Ellipsis, slice(2, -10, None), slice(None, -12, None)),
        (Ellipsis, slice(1, -11, None), slice(None, -12, None)),
    ],
    6:[
        (Ellipsis, slice(None, -14, None), slice(None, -14, None)),
        (Ellipsis, slice(None, -14, None), slice(1, -13, None)),
        (Ellipsis, slice(None, -14, None), slice(2, -12, None)),
        (Ellipsis, slice(None, -14, None), slice(3, -11, None)),
        (Ellipsis, slice(None, -14, None), slice(4, -10, None)),
        (Ellipsis, slice(None, -14, None), slice(5, -9, None)),
        (Ellipsis, slice(None, -14, None), slice(6, -8, None)),
        (Ellipsis, slice(None, -14, None), slice(7, -7, None)),
        (Ellipsis, slice(None, -14, None), slice(8, -6, None)),
        (Ellipsis, slice(None, -14, None), slice(9, -5, None)),
        (Ellipsis, slice(None, -14, None), slice(10, -4, None)),
        (Ellipsis, slice(None, -14, None), slice(11, -3, None)),
        (Ellipsis, slice(None, -14, None), slice(12, -2, None)),
        (Ellipsis, slice(None, -14, None), slice(13, -1, None)),
        (Ellipsis, slice(None, -14, None), slice(14, None, None)),
        (Ellipsis, slice(1, -13, None), slice(14, None, None)),
        (Ellipsis, slice(2, -12, None), slice(14, None, None)),
        (Ellipsis, slice(3, -11, None), slice(14, None, None)),
        (Ellipsis, slice(4, -10, None), slice(14, None, None)),
        (Ellipsis, slice(5, -9, None), slice(14, None, None)),
        (Ellipsis, slice(6, -8, None), slice(14, None, None)),
        (Ellipsis, slice(7, -7, None), slice(14, None, None)),
        (Ellipsis, slice(8, -6, None), slice(14, None, None)),
        (Ellipsis, slice(9, -5, None), slice(14, None, None)),
        (Ellipsis, slice(10, -4, None), slice(14, None, None)),
        (Ellipsis, slice(11, -3, None), slice(14, None, None)),
        (Ellipsis, slice(12, -2, None), slice(14, None, None)),
        (Ellipsis, slice(13, -1, None), slice(14, None, None)),
        (Ellipsis, slice(14, None, None), slice(14, None, None)),
        (Ellipsis, slice(14, None, None), slice(13, -1, None)),
        (Ellipsis, slice(14, None, None), slice(12, -2, None)),
        (Ellipsis, slice(14, None, None), slice(11, -3, None)),
        (Ellipsis, slice(14, None, None), slice(10, -4, None)),
        (Ellipsis, slice(14, None, None), slice(9, -5, None)),
        (Ellipsis, slice(14, None, None), slice(8, -6, None)),
        (Ellipsis, slice(14, None, None), slice(7, -7, None)),
        (Ellipsis, slice(14, None, None), slice(6, -8, None)),
        (Ellipsis, slice(14, None, None), slice(5, -9, None)),
        (Ellipsis, slice(14, None, None), slice(4, -10, None)),
        (Ellipsis, slice(14, None, None), slice(3, -11, None)),
        (Ellipsis, slice(14, None, None), slice(2, -12, None)),
        (Ellipsis, slice(14, None, None), slice(1, -13, None)),
        (Ellipsis, slice(14, None, None), slice(None, -14, None)),
        (Ellipsis, slice(13, -1, None), slice(None, -14, None)),
        (Ellipsis, slice(12, -2, None), slice(None, -14, None)),
        (Ellipsis, slice(11, -3, None), slice(None, -14, None)),
        (Ellipsis, slice(10, -4, None), slice(None, -14, None)),
        (Ellipsis, slice(9, -5, None), slice(None, -14, None)),
        (Ellipsis, slice(8, -6, None), slice(None, -14, None)),
        (Ellipsis, slice(7, -7, None), slice(None, -14, None)),
        (Ellipsis, slice(6, -8, None), slice(None, -14, None)),
        (Ellipsis, slice(5, -9, None), slice(None, -14, None)),
        (Ellipsis, slice(4, -10, None), slice(None, -14, None)),
        (Ellipsis, slice(3, -11, None), slice(None, -14, None)),
        (Ellipsis, slice(2, -12, None), slice(None, -14, None)),
        (Ellipsis, slice(1, -13, None), slice(None, -14, None)),
    ],
    7:[
        (Ellipsis, slice(None, -16, None), slice(None, -16, None)),
        (Ellipsis, slice(None, -16, None), slice(1, -15, None)),
        (Ellipsis, slice(None, -16, None), slice(2, -14, None)),
        (Ellipsis, slice(None, -16, None), slice(3, -13, None)),
        (Ellipsis, slice(None, -16, None), slice(4, -12, None)),
        (Ellipsis, slice(None, -16, None), slice(5, -11, None)),
        (Ellipsis, slice(None, -16, None), slice(6, -10, None)),
        (Ellipsis, slice(None, -16, None), slice(7, -9, None)),
        (Ellipsis, slice(None, -16, None), slice(8, -8, None)),
        (Ellipsis, slice(None, -16, None), slice(9, -7, None)),
        (Ellipsis, slice(None, -16, None), slice(10, -6, None)),
        (Ellipsis, slice(None, -16, None), slice(11, -5, None)),
        (Ellipsis, slice(None, -16, None), slice(12, -4, None)),
        (Ellipsis, slice(None, -16, None), slice(13, -3, None)),
        (Ellipsis, slice(None, -16, None), slice(14, -2, None)),
        (Ellipsis, slice(None, -16, None), slice(15, -1, None)),
        (Ellipsis, slice(None, -16, None), slice(16, None, None)),
        (Ellipsis, slice(1, -15, None), slice(16, None, None)),
        (Ellipsis, slice(2, -14, None), slice(16, None, None)),
        (Ellipsis, slice(3, -13, None), slice(16, None, None)),
        (Ellipsis, slice(4, -12, None), slice(16, None, None)),
        (Ellipsis, slice(5, -11, None), slice(16, None, None)),
        (Ellipsis, slice(6, -10, None), slice(16, None, None)),
        (Ellipsis, slice(7, -9, None), slice(16, None, None)),
        (Ellipsis, slice(8, -8, None), slice(16, None, None)),
        (Ellipsis, slice(9, -7, None), slice(16, None, None)),
        (Ellipsis, slice(10, -6, None), slice(16, None, None)),
        (Ellipsis, slice(11, -5, None), slice(16, None, None)),
        (Ellipsis, slice(12, -4, None), slice(16, None, None)),
        (Ellipsis, slice(13, -3, None), slice(16, None, None)),
        (Ellipsis, slice(14, -2, None), slice(16, None, None)),
        (Ellipsis, slice(15, -1, None), slice(16, None, None)),
        (Ellipsis, slice(16, None, None), slice(16, None, None)),
        (Ellipsis, slice(16, None, None), slice(15, -1, None)),
        (Ellipsis, slice(16, None, None), slice(14, -2, None)),
        (Ellipsis, slice(16, None, None), slice(13, -3, None)),
        (Ellipsis, slice(16, None, None), slice(12, -4, None)),
        (Ellipsis, slice(16, None, None), slice(11, -5, None)),
        (Ellipsis, slice(16, None, None), slice(10, -6, None)),
        (Ellipsis, slice(16, None, None), slice(9, -7, None)),
        (Ellipsis, slice(16, None, None), slice(8, -8, None)),
        (Ellipsis, slice(16, None, None), slice(7, -9, None)),
        (Ellipsis, slice(16, None, None), slice(6, -10, None)),
        (Ellipsis, slice(16, None, None), slice(5, -11, None)),
        (Ellipsis, slice(16, None, None), slice(4, -12, None)),
        (Ellipsis, slice(16, None, None), slice(3, -13, None)),
        (Ellipsis, slice(16, None, None), slice(2, -14, None)),
        (Ellipsis, slice(16, None, None), slice(1, -15, None)),
        (Ellipsis, slice(16, None, None), slice(None, -16, None)),
        (Ellipsis, slice(15, -1, None), slice(None, -16, None)),
        (Ellipsis, slice(14, -2, None), slice(None, -16, None)),
        (Ellipsis, slice(13, -3, None), slice(None, -16, None)),
        (Ellipsis, slice(12, -4, None), slice(None, -16, None)),
        (Ellipsis, slice(11, -5, None), slice(None, -16, None)),
        (Ellipsis, slice(10, -6, None), slice(None, -16, None)),
        (Ellipsis, slice(9, -7, None), slice(None, -16, None)),
        (Ellipsis, slice(8, -8, None), slice(None, -16, None)),
        (Ellipsis, slice(7, -9, None), slice(None, -16, None)),
        (Ellipsis, slice(6, -10, None), slice(None, -16, None)),
        (Ellipsis, slice(5, -11, None), slice(None, -16, None)),
        (Ellipsis, slice(4, -12, None), slice(None, -16, None)),
        (Ellipsis, slice(3, -13, None), slice(None, -16, None)),
        (Ellipsis, slice(2, -14, None), slice(None, -16, None)),
        (Ellipsis, slice(1, -15, None), slice(None, -16, None)),
    ],
    8:[
        (Ellipsis, slice(None, -18, None), slice(None, -18, None)),
        (Ellipsis, slice(None, -18, None), slice(1, -17, None)),
        (Ellipsis, slice(None, -18, None), slice(2, -16, None)),
        (Ellipsis, slice(None, -18, None), slice(3, -15, None)),
        (Ellipsis, slice(None, -18, None), slice(4, -14, None)),
        (Ellipsis, slice(None, -18, None), slice(5, -13, None)),
        (Ellipsis, slice(None, -18, None), slice(6, -12, None)),
        (Ellipsis, slice(None, -18, None), slice(7, -11, None)),
        (Ellipsis, slice(None, -18, None), slice(8, -10, None)),
        (Ellipsis, slice(None, -18, None), slice(9, -9, None)),
        (Ellipsis, slice(None, -18, None), slice(10, -8, None)),
        (Ellipsis, slice(None, -18, None), slice(11, -7, None)),
        (Ellipsis, slice(None, -18, None), slice(12, -6, None)),
        (Ellipsis, slice(None, -18, None), slice(13, -5, None)),
        (Ellipsis, slice(None, -18, None), slice(14, -4, None)),
        (Ellipsis, slice(None, -18, None), slice(15, -3, None)),
        (Ellipsis, slice(None, -18, None), slice(16, -2, None)),
        (Ellipsis, slice(None, -18, None), slice(17, -1, None)),
        (Ellipsis, slice(None, -18, None), slice(18, None, None)),
        (Ellipsis, slice(1, -17, None), slice(18, None, None)),
        (Ellipsis, slice(2, -16, None), slice(18, None, None)),
        (Ellipsis, slice(3, -15, None), slice(18, None, None)),
        (Ellipsis, slice(4, -14, None), slice(18, None, None)),
        (Ellipsis, slice(5, -13, None), slice(18, None, None)),
        (Ellipsis, slice(6, -12, None), slice(18, None, None)),
        (Ellipsis, slice(7, -11, None), slice(18, None, None)),
        (Ellipsis, slice(8, -10, None), slice(18, None, None)),
        (Ellipsis, slice(9, -9, None), slice(18, None, None)),
        (Ellipsis, slice(10, -8, None), slice(18, None, None)),
        (Ellipsis, slice(11, -7, None), slice(18, None, None)),
        (Ellipsis, slice(12, -6, None), slice(18, None, None)),
        (Ellipsis, slice(13, -5, None), slice(18, None, None)),
        (Ellipsis, slice(14, -4, None), slice(18, None, None)),
        (Ellipsis, slice(15, -3, None), slice(18, None, None)),
        (Ellipsis, slice(16, -2, None), slice(18, None, None)),
        (Ellipsis, slice(17, -1, None), slice(18, None, None)),
        (Ellipsis, slice(18, None, None), slice(18, None, None)),
        (Ellipsis, slice(18, None, None), slice(17, -1, None)),
        (Ellipsis, slice(18, None, None), slice(16, -2, None)),
        (Ellipsis, slice(18, None, None), slice(15, -3, None)),
        (Ellipsis, slice(18, None, None), slice(14, -4, None)),
        (Ellipsis, slice(18, None, None), slice(13, -5, None)),
        (Ellipsis, slice(18, None, None), slice(12, -6, None)),
        (Ellipsis, slice(18, None, None), slice(11, -7, None)),
        (Ellipsis, slice(18, None, None), slice(10, -8, None)),
        (Ellipsis, slice(18, None, None), slice(9, -9, None)),
        (Ellipsis, slice(18, None, None), slice(8, -10, None)),
        (Ellipsis, slice(18, None, None), slice(7, -11, None)),
        (Ellipsis, slice(18, None, None), slice(6, -12, None)),
        (Ellipsis, slice(18, None, None), slice(5, -13, None)),
        (Ellipsis, slice(18, None, None), slice(4, -14, None)),
        (Ellipsis, slice(18, None, None), slice(3, -15, None)),
        (Ellipsis, slice(18, None, None), slice(2, -16, None)),
        (Ellipsis, slice(18, None, None), slice(1, -17, None)),
        (Ellipsis, slice(18, None, None), slice(None, -18, None)),
        (Ellipsis, slice(17, -1, None), slice(None, -18, None)),
        (Ellipsis, slice(16, -2, None), slice(None, -18, None)),
        (Ellipsis, slice(15, -3, None), slice(None, -18, None)),
        (Ellipsis, slice(14, -4, None), slice(None, -18, None)),
        (Ellipsis, slice(13, -5, None), slice(None, -18, None)),
        (Ellipsis, slice(12, -6, None), slice(None, -18, None)),
        (Ellipsis, slice(11, -7, None), slice(None, -18, None)),
        (Ellipsis, slice(10, -8, None), slice(None, -18, None)),
        (Ellipsis, slice(9, -9, None), slice(None, -18, None)),
        (Ellipsis, slice(8, -10, None), slice(None, -18, None)),
        (Ellipsis, slice(7, -11, None), slice(None, -18, None)),
        (Ellipsis, slice(6, -12, None), slice(None, -18, None)),
        (Ellipsis, slice(5, -13, None), slice(None, -18, None)),
        (Ellipsis, slice(4, -14, None), slice(None, -18, None)),
        (Ellipsis, slice(3, -15, None), slice(None, -18, None)),
        (Ellipsis, slice(2, -16, None), slice(None, -18, None)),
        (Ellipsis, slice(1, -17, None), slice(None, -18, None)),
    ],
    9:[
        (Ellipsis, slice(None, -20, None), slice(None, -20, None)),
        (Ellipsis, slice(None, -20, None), slice(1, -19, None)),
        (Ellipsis, slice(None, -20, None), slice(2, -18, None)),
        (Ellipsis, slice(None, -20, None), slice(3, -17, None)),
        (Ellipsis, slice(None, -20, None), slice(4, -16, None)),
        (Ellipsis, slice(None, -20, None), slice(5, -15, None)),
        (Ellipsis, slice(None, -20, None), slice(6, -14, None)),
        (Ellipsis, slice(None, -20, None), slice(7, -13, None)),
        (Ellipsis, slice(None, -20, None), slice(8, -12, None)),
        (Ellipsis, slice(None, -20, None), slice(9, -11, None)),
        (Ellipsis, slice(None, -20, None), slice(10, -10, None)),
        (Ellipsis, slice(None, -20, None), slice(11, -9, None)),
        (Ellipsis, slice(None, -20, None), slice(12, -8, None)),
        (Ellipsis, slice(None, -20, None), slice(13, -7, None)),
        (Ellipsis, slice(None, -20, None), slice(14, -6, None)),
        (Ellipsis, slice(None, -20, None), slice(15, -5, None)),
        (Ellipsis, slice(None, -20, None), slice(16, -4, None)),
        (Ellipsis, slice(None, -20, None), slice(17, -3, None)),
        (Ellipsis, slice(None, -20, None), slice(18, -2, None)),
        (Ellipsis, slice(None, -20, None), slice(19, -1, None)),
        (Ellipsis, slice(None, -20, None), slice(20, None, None)),
        (Ellipsis, slice(1, -19, None), slice(20, None, None)),
        (Ellipsis, slice(2, -18, None), slice(20, None, None)),
        (Ellipsis, slice(3, -17, None), slice(20, None, None)),
        (Ellipsis, slice(4, -16, None), slice(20, None, None)),
        (Ellipsis, slice(5, -15, None), slice(20, None, None)),
        (Ellipsis, slice(6, -14, None), slice(20, None, None)),
        (Ellipsis, slice(7, -13, None), slice(20, None, None)),
        (Ellipsis, slice(8, -12, None), slice(20, None, None)),
        (Ellipsis, slice(9, -11, None), slice(20, None, None)),
        (Ellipsis, slice(10, -10, None), slice(20, None, None)),
        (Ellipsis, slice(11, -9, None), slice(20, None, None)),
        (Ellipsis, slice(12, -8, None), slice(20, None, None)),
        (Ellipsis, slice(13, -7, None), slice(20, None, None)),
        (Ellipsis, slice(14, -6, None), slice(20, None, None)),
        (Ellipsis, slice(15, -5, None), slice(20, None, None)),
        (Ellipsis, slice(16, -4, None), slice(20, None, None)),
        (Ellipsis, slice(17, -3, None), slice(20, None, None)),
        (Ellipsis, slice(18, -2, None), slice(20, None, None)),
        (Ellipsis, slice(19, -1, None), slice(20, None, None)),
        (Ellipsis, slice(20, None, None), slice(20, None, None)),
        (Ellipsis, slice(20, None, None), slice(19, -1, None)),
        (Ellipsis, slice(20, None, None), slice(18, -2, None)),
        (Ellipsis, slice(20, None, None), slice(17, -3, None)),
        (Ellipsis, slice(20, None, None), slice(16, -4, None)),
        (Ellipsis, slice(20, None, None), slice(15, -5, None)),
        (Ellipsis, slice(20, None, None), slice(14, -6, None)),
        (Ellipsis, slice(20, None, None), slice(13, -7, None)),
        (Ellipsis, slice(20, None, None), slice(12, -8, None)),
        (Ellipsis, slice(20, None, None), slice(11, -9, None)),
        (Ellipsis, slice(20, None, None), slice(10, -10, None)),
        (Ellipsis, slice(20, None, None), slice(9, -11, None)),
        (Ellipsis, slice(20, None, None), slice(8, -12, None)),
        (Ellipsis, slice(20, None, None), slice(7, -13, None)),
        (Ellipsis, slice(20, None, None), slice(6, -14, None)),
        (Ellipsis, slice(20, None, None), slice(5, -15, None)),
        (Ellipsis, slice(20, None, None), slice(4, -16, None)),
        (Ellipsis, slice(20, None, None), slice(3, -17, None)),
        (Ellipsis, slice(20, None, None), slice(2, -18, None)),
        (Ellipsis, slice(20, None, None), slice(1, -19, None)),
        (Ellipsis, slice(20, None, None), slice(None, -20, None)),
        (Ellipsis, slice(19, -1, None), slice(None, -20, None)),
        (Ellipsis, slice(18, -2, None), slice(None, -20, None)),
        (Ellipsis, slice(17, -3, None), slice(None, -20, None)),
        (Ellipsis, slice(16, -4, None), slice(None, -20, None)),
        (Ellipsis, slice(15, -5, None), slice(None, -20, None)),
        (Ellipsis, slice(14, -6, None), slice(None, -20, None)),
        (Ellipsis, slice(13, -7, None), slice(None, -20, None)),
        (Ellipsis, slice(12, -8, None), slice(None, -20, None)),
        (Ellipsis, slice(11, -9, None), slice(None, -20, None)),
        (Ellipsis, slice(10, -10, None), slice(None, -20, None)),
        (Ellipsis, slice(9, -11, None), slice(None, -20, None)),
        (Ellipsis, slice(8, -12, None), slice(None, -20, None)),
        (Ellipsis, slice(7, -13, None), slice(None, -20, None)),
        (Ellipsis, slice(6, -14, None), slice(None, -20, None)),
        (Ellipsis, slice(5, -15, None), slice(None, -20, None)),
        (Ellipsis, slice(4, -16, None), slice(None, -20, None)),
        (Ellipsis, slice(3, -17, None), slice(None, -20, None)),
        (Ellipsis, slice(2, -18, None), slice(None, -20, None)),
        (Ellipsis, slice(1, -19, None), slice(None, -20, None)),
    ],
}


Y_COEFFS = {
    1:np.array([-0.5, -0.5, -0.5,  0. ,  0.5,  0.5,  0.5,  0. ]),
    2:np.array([-0.25, -0.25, -0.25, -0.25, -0.25, -0.5 ,  0.  ,  0.5 ,  0.25,
        0.25,  0.25,  0.25,  0.25,  0.5 ,  0.  , -0.5 ]),
    3:np.array([-0.16666667, -0.16666667, -0.16666667, -0.16666667, -0.16666667,
       -0.16666667, -0.16666667, -0.25      , -0.5       ,  0.        ,
        0.5       ,  0.25      ,  0.16666667,  0.16666667,  0.16666667,
        0.16666667,  0.16666667,  0.16666667,  0.16666667,  0.25      ,
        0.5       ,  0.        , -0.5       , -0.25      ]),
    4:np.array([-0.125     , -0.125     , -0.125     , -0.125     , -0.125     ,
       -0.125     , -0.125     , -0.125     , -0.125     , -0.16666667,
       -0.25      , -0.5       ,  0.        ,  0.5       ,  0.25      ,
        0.16666667,  0.125     ,  0.125     ,  0.125     ,  0.125     ,
        0.125     ,  0.125     ,  0.125     ,  0.125     ,  0.125     ,
        0.16666667,  0.25      ,  0.5       ,  0.        , -0.5       ,
       -0.25      , -0.16666667]),
    5:np.array([-0.1       , -0.1       , -0.1       , -0.1       , -0.1       ,
       -0.1       , -0.1       , -0.1       , -0.1       , -0.1       ,
       -0.1       , -0.125     , -0.16666667, -0.25      , -0.5       ,
        0.        ,  0.5       ,  0.25      ,  0.16666667,  0.125     ,
        0.1       ,  0.1       ,  0.1       ,  0.1       ,  0.1       ,
        0.1       ,  0.1       ,  0.1       ,  0.1       ,  0.1       ,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ]),
    6:np.array([-0.08333333, -0.08333333, -0.08333333, -0.08333333, -0.08333333,
       -0.08333333, -0.08333333, -0.08333333, -0.08333333, -0.08333333,
       -0.08333333, -0.08333333, -0.08333333, -0.1       , -0.125     ,
       -0.16666667, -0.25      , -0.5       ,  0.        ,  0.5       ,
        0.25      ,  0.16666667,  0.125     ,  0.1       ,  0.08333333,
        0.08333333,  0.08333333,  0.08333333,  0.08333333,  0.08333333,
        0.08333333,  0.08333333,  0.08333333,  0.08333333,  0.08333333,
        0.08333333,  0.08333333,  0.1       ,  0.125     ,  0.16666667,
        0.25      ,  0.5       ,  0.        , -0.5       , -0.25      ,
       -0.16666667, -0.125     , -0.1       ]),
    7:np.array([-0.07142857, -0.07142857, -0.07142857, -0.07142857, -0.07142857,
       -0.07142857, -0.07142857, -0.07142857, -0.07142857, -0.07142857,
       -0.07142857, -0.07142857, -0.07142857, -0.07142857, -0.07142857,
       -0.08333333, -0.1       , -0.125     , -0.16666667, -0.25      ,
       -0.5       ,  0.        ,  0.5       ,  0.25      ,  0.16666667,
        0.125     ,  0.1       ,  0.08333333,  0.07142857,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.07142857,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.07142857,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.08333333,  0.1       ,
        0.125     ,  0.16666667,  0.25      ,  0.5       ,  0.        ,
       -0.5       , -0.25      , -0.16666667, -0.125     , -0.1       ,
       -0.08333333]),
    8:np.array([-0.0625    , -0.0625    , -0.0625    , -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.0625    , -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.0625    , -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.07142857, -0.08333333, -0.1       ,
       -0.125     , -0.16666667, -0.25      , -0.5       ,  0.        ,
        0.5       ,  0.25      ,  0.16666667,  0.125     ,  0.1       ,
        0.08333333,  0.07142857,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,  0.07142857,
        0.08333333,  0.1       ,  0.125     ,  0.16666667,  0.25      ,
        0.5       ,  0.        , -0.5       , -0.25      , -0.16666667,
       -0.125     , -0.1       , -0.08333333, -0.07142857]),
    9:np.array([-0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.0625    ,
       -0.07142857, -0.08333333, -0.1       , -0.125     , -0.16666667,
       -0.25      , -0.5       ,  0.        ,  0.5       ,  0.25      ,
        0.16666667,  0.125     ,  0.1       ,  0.08333333,  0.07142857,
        0.0625    ,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.0625    ,  0.07142857,  0.08333333,  0.1       ,  0.125     ,
        0.16666667,  0.25      ,  0.5       ,  0.        , -0.5       ,
       -0.25      , -0.16666667, -0.125     , -0.1       , -0.08333333,
       -0.07142857, -0.0625    ]),
    10:np.array([-0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05555556, -0.0625    , -0.07142857, -0.08333333,
       -0.1       , -0.125     , -0.16666667, -0.25      , -0.5       ,
        0.        ,  0.5       ,  0.25      ,  0.16666667,  0.125     ,
        0.1       ,  0.08333333,  0.07142857,  0.0625    ,  0.05555556,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05555556,  0.0625    ,  0.07142857,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.07142857, -0.0625    , -0.05555556]),
}

X_COEFFS = {
    1:np.array([-0.5,  0. ,  0.5,  0.5,  0.5,  0. , -0.5, -0.5]),
    2:np.array([-0.25, -0.5 ,  0.  ,  0.5 ,  0.25,  0.25,  0.25,  0.25,  0.25,
        0.5 ,  0.  , -0.5 , -0.25, -0.25, -0.25, -0.25]),
    3:np.array([-0.16666667, -0.25      , -0.5       ,  0.        ,  0.5       ,
        0.25      ,  0.16666667,  0.16666667,  0.16666667,  0.16666667,
        0.16666667,  0.16666667,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.16666667,
       -0.16666667, -0.16666667, -0.16666667, -0.16666667]),
    4:np.array([-0.125     , -0.16666667, -0.25      , -0.5       ,  0.        ,
        0.5       ,  0.25      ,  0.16666667,  0.125     ,  0.125     ,
        0.125     ,  0.125     ,  0.125     ,  0.125     ,  0.125     ,
        0.125     ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.125     , -0.125     , -0.125     , -0.125     , -0.125     ,
       -0.125     , -0.125     ]),
    5:np.array([-0.1       , -0.125     , -0.16666667, -0.25      , -0.5       ,
        0.        ,  0.5       ,  0.25      ,  0.16666667,  0.125     ,
        0.1       ,  0.1       ,  0.1       ,  0.1       ,  0.1       ,
        0.1       ,  0.1       ,  0.1       ,  0.1       ,  0.1       ,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.1       , -0.1       , -0.1       , -0.1       ,
       -0.1       , -0.1       , -0.1       , -0.1       , -0.1       ]),
    6:np.array([-0.08333333, -0.1       , -0.125     , -0.16666667, -0.25      ,
       -0.5       ,  0.        ,  0.5       ,  0.25      ,  0.16666667,
        0.125     ,  0.1       ,  0.08333333,  0.08333333,  0.08333333,
        0.08333333,  0.08333333,  0.08333333,  0.08333333,  0.08333333,
        0.08333333,  0.08333333,  0.08333333,  0.08333333,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.08333333, -0.08333333, -0.08333333,
       -0.08333333, -0.08333333, -0.08333333, -0.08333333, -0.08333333,
       -0.08333333, -0.08333333, -0.08333333]),
    7:np.array([-0.07142857, -0.08333333, -0.1       , -0.125     , -0.16666667,
       -0.25      , -0.5       ,  0.        ,  0.5       ,  0.25      ,
        0.16666667,  0.125     ,  0.1       ,  0.08333333,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.07142857,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.07142857,  0.07142857,
        0.07142857,  0.07142857,  0.07142857,  0.07142857,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.07142857, -0.07142857, -0.07142857,
       -0.07142857, -0.07142857, -0.07142857, -0.07142857, -0.07142857,
       -0.07142857, -0.07142857, -0.07142857, -0.07142857, -0.07142857,
       -0.07142857]),
    8:np.array([-0.0625    , -0.07142857, -0.08333333, -0.1       , -0.125     ,
       -0.16666667, -0.25      , -0.5       ,  0.        ,  0.5       ,
        0.25      ,  0.16666667,  0.125     ,  0.1       ,  0.08333333,
        0.07142857,  0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,  0.0625    ,
        0.0625    ,  0.0625    ,  0.0625    ,  0.07142857,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.07142857, -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.0625    , -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.0625    , -0.0625    , -0.0625    ,
       -0.0625    , -0.0625    , -0.0625    , -0.0625    ]),
    9:np.array([-0.05555556, -0.0625    , -0.07142857, -0.08333333, -0.1       ,
       -0.125     , -0.16666667, -0.25      , -0.5       ,  0.        ,
        0.5       ,  0.25      ,  0.16666667,  0.125     ,  0.1       ,
        0.08333333,  0.07142857,  0.0625    ,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.05555556,  0.05555556,  0.05555556,
        0.05555556,  0.05555556,  0.0625    ,  0.07142857,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.07142857, -0.0625    , -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556, -0.05555556, -0.05555556, -0.05555556,
       -0.05555556, -0.05555556]),
    10:np.array([-0.05      , -0.05555556, -0.0625    , -0.07142857, -0.08333333,
       -0.1       , -0.125     , -0.16666667, -0.25      , -0.5       ,
        0.        ,  0.5       ,  0.25      ,  0.16666667,  0.125     ,
        0.1       ,  0.08333333,  0.07142857,  0.0625    ,  0.05555556,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05      ,  0.05      ,  0.05      ,  0.05      ,
        0.05      ,  0.05555556,  0.0625    ,  0.07142857,  0.08333333,
        0.1       ,  0.125     ,  0.16666667,  0.25      ,  0.5       ,
        0.        , -0.5       , -0.25      , -0.16666667, -0.125     ,
       -0.1       , -0.08333333, -0.07142857, -0.0625    , -0.05555556,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ,
       -0.05      , -0.05      , -0.05      , -0.05      , -0.05      ]),
}
